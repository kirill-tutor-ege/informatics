# Перед игроками лежит куча камней. 
# За один ход игрок может добавить в кучу один или четыре камня либо увеличить количество камней в куче в пять раз. 
# Игра завершается в тот момент, когда количество камней в куче становится не менее 68.
# В начальный момент в куче было S камней; 1 ≤ S ≤ 67.

# Принять на вход кучу камней, а в результате вернуть все кучи, которые можно из нее получить
def move(n):
    return n + 1, n + 4, n * 5

# Принимает на вход кучу камней, и проверяет, заканчивается ли в этой куче игра
# Возращает результат в виде ответа Да\Нет
def end(n):
    return n >= 68

# Принимает на вход кучу камней, и отвечает Да\Нет на вопрос:
# Является ли эта куча выигрышной позицией за 1 ход?
# Позиция является выигрышной за 1 ход, если ХОТЯ БЫ ОДИН ход ИЗ НЕЕ ведет к завершению игры
def win1(n):
    return any(end(x) for x in move(n))

# Принимает на вход кучу камней, и отвечает Да\Нет на вопрос:
# Является ли эта куча проигрышной позицией за 1 ход?
# Позиция является проигрышной за 1 ход, если КАЖДЫЙ ход ИЗ НЕЕ ведет соперника в выигрышную позицию за 1 ход
def lose1(n):
    return all(win1(x) for x in move(n)) and not win1(n)

# ОПЦИОНАЛЬНО, ТОЛЬКО ЕСЛИ В 19 ЗАДАНИИ НЕУДАЧНЫЙ ХОД
# Принимает на вход кучу камней, и отвечает Да\Нет на вопрос:
# Можно ли из этой позиции неудачно проиграть за 1 ход?
# Если ХОТЯ БЫ ОДИН ход ИЗ НЕЕ ведет соперника в выигрышную позицию за 1 ход
def lose1_fail(n):
    return any(win1(x) for x in move(n))

# Принимает на вход кучу камней, и отвечает Да\Нет на вопрос:
# Является ли эта куча выигрышной позицией за 2 хода?
# Позиция является выигрышной за 2 хода, если ХОТЯ БЫ ОДИН ход ИЗ НЕЕ ведет соперника в проигрышную позицию за 1 ход
def win2(n):
    return any(lose1(x) for x in move(n)) and not win1(n)

# Принимает на вход кучу камней, и отвечает Да\Нет на вопрос:
# Является ли эта куча проигрышной позицией за 1 или 2 хода, но не гарантированно за 1?
# Позиция является проигрышной за 2 хода, если КАЖДЫЙ ход ИЗ НЕЕ ведет соперника ИЛИ в выигрышную позицию за 1 ход 
# ИЛИ в выигрышную позицию за 2 хода НО каждый ход НЕ ВЕДЕТ гарантированно в выигрышную позицию за 1 ход
def lose12(n):
    return all(win1(x) or win2(x) for x in move(n)) and not all(win1(x) for x in move(n))

print("19: ", [x for x in range(1, 67) if lose1(x)])
print("20: ", [x for x in range(1, 67) if win2(x)])
print("21: ", [x for x in range(1, 67) if lose12(x)])
